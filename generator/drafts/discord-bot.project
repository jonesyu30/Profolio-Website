Discord Notice Bot Project
Automatic Web Scrapping

##Chapter 0: The Background
This is one of my first "huge" projects. Why do I say that? Although there are less than 10 files in the entire codebase, and there are only a few functions, my target audience is the public scouts, which stresses me out. Also, I got stuck in a lot of hurdles with many dead ends, slowly making my interest fades away. 
Although I didn't do much coding, I did a lot of other things, including:

1. Creating YouTube Videos every week for progress update
2. Getting feedback from various channels
3. Fixing potential bugs
4. Searching for a reliable server hosting method
5. Studying if the automation violates any Terms of Services or ethical concerns
6. Investigating potential markets

I would like to talk about them in details, it was a fun journey.

##Chapter 1: Discord Bot
So ever since I was using Discord, I am thinking of creating a Discord bot. Previously, when I was enjoying a game named Hypixel Skyblock, people would create a custom bot for their server to notify people for important events. This makes the entire process feel professional. Thus, I tried creating my own bot. In that time, I know little about programming, and I just follow whatever the YouTube tutorials said and make my alterations in the positions that I understand. If I remember correctly, I believe that it was made in Java. However, it was abandoned as I stopped playing the game and stopped using discord. 

A few years later, I started to use Discord with another friend group and I noticed that a new unofficial Scout Discord group was created and inviting scouts to join. Being a scout myself, I joined the server and took a look around. The server is pretty active with a few people chilling around every night. I never joined that chat, but one feature inspired me - the notice notifications feature. Whenever there is a new notice from the scout organization, people share it onto a dedicated Discord channel to let more people join different events. And I think to myself, I know programming, I know Discord, I can automate the process.  

Thus, the project begins.

##Chapter 2: Initial plan
The first plan is to speed run the creation of a working Discord bot. I chose JavaScript over Java, as I gained experience on Node.js over the years. I simply followed some tutorials and quickly got the bot online. 

Next, I have to know how to automatically get the notice from their website. My plan is to look through their HTML and JavaScript and see if they are using some kind of backend API where I can use myself. However, after searching for a long time, I gave up. Instead, I fetched the entire webpage HTML, parsed it, and extracted the information that I need. This method will work as long as the web design remains unchanged, but as long as 1 of the elements are altered, my bot might break.

Afterwards, I have to save it somewhere. Initially, I used a JSON file as my database to store all the fetched notices, which works well with text. 

So my idea is that: the database will be storing all the files that I have sent. So when I scrap the text again, I know which I have sent and which I haven't. (Now that I think about it, I could probably use some kind of hashing method so that I won't be storing anything that does not belongs to me) And I can send only those that I haven't sent before, to prevent duplicate sending. 

With some parsing and merging with the Discord.js api, the first version of the product is born.

##Chapter 3: The Video
To celebrate my first success, and to tell people about the new tool, I created a video showcasing the production process and the final result. I included the process so that others knows what they are using, and understand its reliability, so that I gets less stressful when something wrong happens.  

Anyways, the video took like 4 days to finish, from scripting to taking footage and editing. The quality isn't great, especially the sound quality, I think my editing, trying to make the base stronger, made it worse than the original. But it got some attention, and the ending is great, which greatly enhanced the video feeling. 

Some people even shared it in the unofficial Discord Group, and I got contacted by one of the Scout group Instagram account owner to ask if I would like to share it to the world. I declined it as it wasn't a complete project yet. But now, I regret it. If I got the chance again, I would definitely accept the offer. Worst case scenario, the Discord bot breaks/gets hacked and every server got spammed with random messages. But I can fix whatever happened, and would get fame from this, maybe some leaders would notice my skills and ask me to integrate the real API. OMG that would be cool, but now, I missed the chance. Lesson learnt, there are chances everywhere, only if you are prepared. (in my language: 機會係留俾啲有機會嘅人)

##Chapter 4: The Peak
I would say I peaked in the first video, riding the hype, I tried to create more content and make more features for my app. In the next 3 weeks, I tried to create new features every week and post a video about it. I made it to week 4, with topics including database, Scheduling, and even putting AI in the title. It was great while it last. 

##Chapter 5: The Downfall
The features aren't useful, instead should have focused in polishing and ensuring consistency. I have tried but the problems are just too complex. 